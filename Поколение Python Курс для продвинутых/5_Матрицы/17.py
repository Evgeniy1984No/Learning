"""
Побочная диагональ
На вход программе подается натуральное число
�
n. Напишите программу, которая создает матрицу размером
�
×
�
n×n и заполняет её по следующему правилу:

числа на побочной диагонали равны
1
1;
числа, стоящие выше этой диагонали, равны
0
0;
числа, стоящие ниже этой диагонали, равны
2
2.
Полученную матрицу выведите на экран. Числа в строке разделяйте одним пробелом.

Формат входных данных
На вход программе подается натуральное число
�
n — количество строк и столбцов в матрице.

Формат выходных данных
Программа должна вывести матрицу в соответствии с условием задачи.

Примечание. Побочная диагональ — это диагональ, идущая из правого верхнего в левый нижний угол матрицы.

Тестовые данные 🟢
Sample Input 1:

4
Sample Output 1:

0 0 0 1
0 0 1 2
0 1 2 2
1 2 2 2
Sample Input 2:

2
Sample Output 2:

0 1
1 2
Sample Input 3:

3
Sample Output 3:

0 0 1
0 1 2
1 2 2
"""
n = int(input())
mat = [[0]*n for _ in range(n)]
for i in range(n):
    for j in range(n):
        if j == n - i -1:
            mat[i][j] = 1
        if i > n - 1 - j:
            mat[i][j] = 2
    print(*mat[i])
"""
_____________________________________________________________________________________
"""
n = int(input())
board = [[0] * (n - i - 1) + [1] + [2] * i for i in range(n)]

for row in board:
    print(*row)