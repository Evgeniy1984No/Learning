"""
–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç üå∂Ô∏è
–ú–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞
ÔøΩ
n –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞
ÔøΩ
√ó
ÔøΩ
n√ón, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—Å–µ—Ö —á–∏—Å–µ–ª
1
,
2
,
3
,
‚Ä¶
,
ÔøΩ
2
1,2,3,‚Ä¶,n
2
  —Ç–∞–∫, —á—Ç–æ —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É,
  –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
ÔøΩ
n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã:
ÔøΩ
n —Å—Ç—Ä–æ–∫, –ø–æ
ÔøΩ
n —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏ —Å–ª–æ–≤–æ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
Sample Input 1:

3
8 1 6
3 5 7
4 9 2
Sample Output 1:

YES
Sample Input 2:

3
8 2 6
3 5 7
4 9 1
Sample Output 2:

NO
Sample Input 3:

3
4 9 2
3 5 7
8 1 6
Sample Output 3:

YES
"""
n = int(input())
mat = [[int(i) for i in input().split()] for _ in range(n)]
print(mat)
q = {i for i in range(1, n*n+1)}
m = set()
s = sum(mat[0])
diag_m = []
diag_s = []
res = 'YES'

print(q)
for row in mat:
    m.update(row)
print(m)
if q != m:
    res = 'NO'
else:
    for row in mat:
        if sum(row) != s:
            res = 'NO'
            break
    else:
        for r in range(n):
            col = []
            diag_m.append(mat[r][r])
            diag_s.append(mat[r][n-r-1])
            for c in range(n):
                col.append(mat[c][r])
            if sum(col) != s:
                res = 'NO'
                break
        if sum(diag_s) != s or sum(diag_m) != s:
            res = 'NO'

print(res)