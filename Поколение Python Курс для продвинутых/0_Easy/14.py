"""
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –¥–≤—É—Ö —á–∏—Å–µ–ª –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞, –≤—ã–≤–æ–¥—è—â—É—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤
–≤–∏–¥–µ –æ—Ç–≤–µ—Ç–∞ ¬´–î–ê¬ª –∏–ª–∏ ¬´–ù–ï–¢¬ª.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—ë—Ç—Å—è —á–∏—Å–ª–æ n\, (0 < n < 1000)n(0<n<1000) ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ –Ω–∞–±–æ—Ä–µ. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö nn —Å—Ç—Ä–æ–∫–∞—Ö
–≤–≤–æ–¥—è—Ç—Å—è —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ –Ω–∞–±–æ—Ä (–º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è). –ó–∞—Ç–µ–º —Å–ª–µ–¥—É–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è –∏–ª–∏ –Ω–µ
—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –¥–≤—É—Ö –∫–∞–∫–∏—Ö-—Ç–æ —á–∏—Å–µ–ª –∏–∑ –Ω–∞–±–æ—Ä–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ ¬´–î–ê¬ª –∏–ª–∏ ¬´–ù–ï–¢¬ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°–∞–º–æ –Ω–∞ —Å–µ–±—è —á–∏—Å–ª–æ –∏–∑ –Ω–∞–±–æ—Ä–∞ —É–º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–µ –º–æ–∂–µ—Ç, –¥—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –¥–≤–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—è –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Ä–∞–∑–Ω—ã–µ
–∏–Ω–¥–µ–∫—Å—ã –≤ –Ω–∞–±–æ—Ä–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã.

–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
Sample Input 1:

3
33
17
35
999
Sample Output 1:

–ù–ï–¢
Sample Input 2:

4
89
4
77
4
16
Sample Output 2:

–î–ê
Sample Input 3:

5
1
999
87
33
325
999
Sample Output 3:

–î–ê
"""
ls = []
for _ in range(int(input())):
    ls.append(int(input()))
num = int(input())
count = 0
if num != 0:
    for i in ls:
        if num % i == 0:
            count += 1
    if count > 1:
        print('–î–ê')
    else:
        print('–ù–ï–¢')
else:
    if 0 in ls:
        print('–î–ê')
    else:
        print('–ù–ï–¢')
"""
_______________________________________________________________________________________________________________________
"""
anw = ''
for i in range(len(ls)-1):
    for j in range(i+1, len(ls)):
        if ls[i] * ls[j] == num:
            anw = '–î–ê'
            exit(print(anw))
print('–ù–ï–¢')
"""
____________________________________________________________________________________________________________________
–ú–µ—Ç–æ–¥ –¥–≤—É—Ö —É–∫–∞–∑–∞—Ç–µ–ª–µ–π
______________________________________________________________________________________________________________________
"""
# –≤–≤–æ–¥–∏–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª
n = int(input())

# —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
numbers = []

# –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∏—Å–ª–∞–º–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
for _ in range(n):
    numbers.append(int(input()))

# –≤–≤–æ–¥–∏–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ç–æ,
# —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∫–∞–∫–∏—Ö-—Ç–æ –¥–≤—É—Ö —á–∏—Å–µ–ª –∏–∑ —Å–ø–∏—Å–∫–∞
product = int(input())

# –≤–≤–æ–¥–∏–º –¥–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è - –Ω–∞ –∫—Ä–∞–π–Ω–µ–µ –ª–µ–≤–æ–µ –∏ –ø—Ä–∞–≤–æ–µ —á–∏—Å–ª–æ –≤ —Å–ø–∏—Å–∫–µ
# –ø–æ–¥ —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
# –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞ –∏–Ω–¥–µ–∫–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
left = 0
right = len(numbers) - 1

# —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
numbers.sort()

# –¥–µ–ª–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç —Ä–∞–≤–Ω—ã–º –ù–ï–¢
is_product = '–ù–ï–¢'

# –ø–æ–∫–∞ —É–∫–∞–∑–∞—Ç–µ–ª–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Ä–∞–∑–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
while left != right:
    # –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∏—Å–µ–ª –≤ —Å–ø–∏—Å–∫–µ
    # –±–æ–ª—å—à–µ, —á–µ–º —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    if numbers[left] * numbers[right] > product:
        # —Å–¥–≤–∏–≥–∞–µ–º –ø—Ä–∞–≤—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –ª–µ–≤–µ–µ –ø–æ —Å–ø–∏—Å–∫—É
        right -= 1
    # –∏–Ω–∞—á–µ, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∏—Å–µ–ª –≤ —Å–ø–∏—Å–∫–µ
    # –º–µ–Ω—å—à–µ, —á–µ–º —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    elif numbers[left] * numbers[right] < product:
        # —Å–¥–≤–∏–≥–∞–µ–º –ª–µ–≤—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –ø—Ä–∞–≤–µ–µ –ø–æ —Å–ø–∏—Å–∫—É
        left += 1
    # –≤–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö (–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ —á–∏—Å–ª—É)
    else:
        # –º–µ–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –î–ê
        is_product = '–î–ê'
        # –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª –¥–æ—Å—Ä–æ—á–Ω–æ
        break

# –≤—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç
print(is_product)