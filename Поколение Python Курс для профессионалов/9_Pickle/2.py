"""
Контрольная сумма
По каналу связи передаются pickle файл, содержащий сериализованный словарь или список, и целое число — контрольная
сумма, которая вычисляется по следующему правилу:

для словаря — сумма всех целочисленных ключей (тип int)
для списка — произведение минимального и максимального целочисленных элементов (тип int)
Напишите программу, которая вычисляет контрольную сумму для объекта, содержащегося в pickle файле, и сравнивает ее с
данным целым числом.

Формат входных данных
На вход программе в первой строке подается название pickle файла, в котором содержится сериализованный словарь или
список, в следующей — целое число.

Формат выходных данных
Программа должна вычислить контрольную сумму для объекта, который содержится в данном pickle файле, и

если она совпадает с введенным числом, вывести текст:
Контрольные суммы совпадают
если она не совпадает с введенным числом, вывести текст:
Контрольные суммы не совпадают
Примечание 1. Если список (словарь) не содержит целочисленных элементов (ключей), то считайте, что контрольная сумма
равна
0
0.

Примечание 2. Рассмотрим первый тест. Подается название файла — data.pkl, в котором содержится сериализованный список:

['a', 'b', 3, 4, 'f', 'g', 7, 8]
затем число —
3023
3023. Контрольная сумма для данного списка равна
3
⋅
8
=
24
3⋅8=24. Так как
3023
≠
24
3023

=24, программа выводит:

Контрольные суммы не совпадают
Примечание 3. Подробнее про контрольную сумму можно почитать тут.

Sample Input 1:

data.pkl
3023
Sample Output 1:

Контрольные суммы не совпадают
Sample Input 2:

data2.pkl
3319
Sample Output 2:

Контрольные суммы совпадают
"""
import pickle


def check_sum(filename: str, number: int) -> str:
    with open(filename, 'rb') as file_p:
        data = pickle.load(file_p)
        data_int = list(filter(lambda x: type(x) is int, data))
        if data_int:
            check_num = [max(data_int) * min(data_int), sum(data_int)][type(data) is dict]
            return ('Контрольные суммы не совпадают', 'Контрольные суммы совпадают')[number == check_num]
        return ('Контрольные суммы не совпадают', 'Контрольные суммы совпадают')[number == 0]


print(check_sum(input(), int(input())))
# *********************************************************************************************************************
"""
 как работает вот эта ваша конструкция lst = [i for i in obj if type(i) == int] or [0]?
Переменной lst присваивается то значение, которое первое будет True? То есть если список 
[i for i in obj if type(i) == int] окажется пустым, то его значение будет False и lst будет присвоено [0] так как не 
пустой список является True?
"""
name, sm = input(), int(input())
with open(name, 'rb') as f:
    obj = pickle.load(f)
    lst = [i for i in obj if type(i) == int] or [0]
    check = sum(lst) if type(obj) == dict else max(lst)*min(lst)
    print(['Контрольные суммы не совпадают', 'Контрольные суммы совпадают'][sm == check])