"""
Тимур, Артур и новый курс
Сегодня Тимур ждёт в гости своего друга Артура, чтобы спланировать работу по новому курсу "ООП на Python". Чтобы
подготовиться к встрече, Тимуру необходимо посетить два магазина, расположенных рядом с его домом. От дома до первого
магазина ведёт дорожка длиной
�
1
d
1
​
  метров, а до второго магазина ведёт дорожка длиной
�
2
d
2
​
  метров. Также существует дорожка, соединяющая два магазина друг с другом, длиной
�
3
d
3
​
  метров.

Напишите программу, которая вычисляет минимальное расстояние, которое потребуется пройти Тимуру, чтобы посетить оба
магазина и вернуться домой. Тимур всегда стартует из дома. Он должен посетить оба магазина, перемещаясь только по
имеющимся трём дорожкам, и вернуться назад домой. При этом его совершенно не смутит, если ему придётся посетить один и
тот же магазин или пройти по одной и той же дорожке более одного раза. Единственная его задача — минимизировать
суммарное пройденное расстояние.

Формат входных данных
На вход программе подаются
3
3 натуральных числа
�
1
,

�
2
,

�
3
d
1
​
 , d
2
​
 , d
3
​
  — длины дорожек, каждое на отдельной строке:

�
1
d
1
​
  — длина дорожки, соединяющая дом Тимура и первый магазин
�
2
d
2
​
  — длина дорожки, соединяющая дом Тимура и второй магазин
�
3
d
3
​
  — длина дорожки, соединяющая магазины
Формат выходных данных
Программа должна вывести минимальное количество метров, которое придётся пройти Тимуру, чтобы посетить оба магазина и
вернуться домой.

Примечание 1. Первый пример изображён на рисунке:



Одним из оптимальных маршрутов является: дом
⟶
⟶ первый магазин
⟶
⟶ второй магазин
⟶
⟶ дом.

Во втором примере одним из оптимальных маршрутов является: дом
⟶
⟶ первый магазин
⟶
⟶ дом
⟶
⟶ второй магазин
⟶
⟶дом.

Примечание 2. Тестовые данные доступны по ссылкам:
Sample Input 1:

10
20
30
Sample Output 1:

60
Sample Input 2:

10
10
45
Sample Output 2:

40
Sample Input 3:

100
33
34
Sample Output 3:

134
"""
d1, d2, d3 = map(int, [input() for _ in range(3)])
d = (d1+d2+d3, 2*(d1 + d2), 2*(d3 + min(d1, d2)))
print(min(d))
