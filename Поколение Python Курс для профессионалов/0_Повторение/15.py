"""
Максимальная группа
Назовем набор различных натуральных чисел группой. Например:
(
13
,
4
,
22
,
40
)
(13,4,22,40). Тогда длиной группы будем считать количество чисел в группе. Например, длина группы
(
13
,
4
,
22
,
40
)
(13,4,22,40) равна
4
4.

Дана последовательность натуральных чисел от
1
1 до
�
n включительно. Напишите программу, которая группирует все числа данной последовательности по сумме их цифр и
определяет длину группы, содержащей наибольшее количество чисел.

Формат входных данных
На вход программе подается натуральное число
�
n.

Формат выходных данных
Программа должна сгруппировать все числа из натуральной последовательности от
1
1 до
�
n по сумме их цифр и определить длину группы, содержащей наибольшее количество чисел.

Примечание 1. Рассмотрим третий тест, в котором
�
=
20
n=20. Запишем последовательность чисел от
1
1 до
20
20:
1
,
2
,
3
,
4
,
5
,
6
,
7
,
8
,
9
,
10
,
11
,
12
,
13
,
14
,
15
,
16
,
17
,
18
,
19
,
20
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
Сгруппируем полученные числа по сумме их цифр:
(
1
,
10
)
,
(
2
,
11
,
20
)
,
(
3
,
12
)
,
(
4
,
13
)
,
(
5
,
14
)
,
(
6
,
15
)
,
(
7
,
16
)
,
(
8
,
17
)
,
(
9
,
18
)
,
(
19
)
(1,10),(2,11,20),(3,12),(4,13),(5,14),(6,15),(7,16),(8,17),(9,18),(19)

Итак, длина группы с наибольшим количеством чисел равна
3
3.

Примечание 2. Тестовые данные доступны по ссылкам:

Архив с тестами
GitHub
Sample Input 1:

13
Sample Output 1:

2
Sample Input 2:

2
Sample Output 2:

1
Sample Input 3:

20
Sample Output 3:

3
"""
seq = list(range(1, int(input()) + 1))
groups = dict()
for i in seq:
    num_group = 0
    for j in str(i):
        num_group += int(j)
    if num_group in groups:
        groups[num_group].append(i)
    else:
        groups.update({num_group: [i]})
print(max(map(lambda x: len(x), groups.values())))

# *********************************************************************************************************************
data = {}

for i in range(1, int(input()) + 1):
    sum_of_digits = sum(map(int, str(i)))
    data[sum_of_digits] = data.get(sum_of_digits, 0) + 1

print(max(data.values()))