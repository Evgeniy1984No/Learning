
# Функция flatten()
# Реализуйте генераторную функцию flatten(), которая принимает один аргумент:
#
# nested_list — список, элементами которого являются целые числа или списки, элементами которых, в свою очередь, также
# являются либо целые числа, либо списки; вложенность может быть произвольной
# Функция должна возвращать генератор, порождающий все числа, содержащиеся в nested_list, включая все числа из всех
# вложенных списков, а затем возбуждает исключение StopIteration.
#
# Примечание 1. В тестирующую систему сдайте программу, содержащую только необходимую генераторную функцию flatten(),
# но не код, вызывающий ее.
#
# Примечание 2. Тестовые данные доступны по ссылкам:
#
# Архив с тестами
# GitHub
# Sample Input 1:
#
# generator = flatten([[1, 2], [[3]], [[4], 5]])
#
# print(*generator)
# Sample Output 1:
#
# 1 2 3 4 5
# Sample Input 2:
#
# generator = flatten([1, 2, 3, 4, 5, 6, 7])
#
# print(*generator)
# Sample Output 2:
#
# 1 2 3 4 5 6 7


def flatten(nested_list):
    for elem in nested_list:
        yield from flatten(elem) if isinstance(elem, list) else [elem]


generator = flatten([1, 2, 3, 4, 5, 6, 7])

print(*generator)