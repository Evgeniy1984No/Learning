"""
–§—É–Ω–∫—Ü–∏—è sort_priority() üå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sort_priority(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

values ‚Äî —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
group ‚Äî —Å–ø–∏—Å–æ–∫, –∫–æ—Ä—Ç–µ–∂ –∏–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª values, –¥–µ–ª–∞—è –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—É —á–∏—Å–µ–ª –∏–∑ group,
–∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø–µ—Ä–≤–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é sort_priority(), –Ω–æ –Ω–µ
–∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
GitHub
Sample Input 1:

numbers = [8, 3, 1, 2, 5, 4, 7, 6]
group = {5, 7, 2, 3}
sort_priority(numbers, group)

print(numbers)
Sample Output 1:

[2, 3, 5, 7, 1, 4, 6, 8]
Sample Input 2:

numbers = [150, 200, 300, 1000, 50, 20000]
sort_priority(numbers, [300, 100, 200])

print(numbers)
Sample Output 2:

[200, 300, 50, 150, 1000, 20000]
Sample Input 3:

numbers = [9, 8, 7, 6, 5, 4, 3, 2, 1]
sort_priority(numbers, (300, 100, 200))

print(numbers)
Sample Output 3:

[1, 2, 3, 4, 5, 6, 7, 8, 9]
"""


def sort_priority(values, group):
    lst = []
    for elem in sorted(group):
        if elem in values:
            values.remove(elem)
            lst.append(elem)
    values[:] = lst + sorted(values)
    return values


# *******************************************************************************************************************
def sort_priority(numbers, group):
    numbers.sort(key=lambda x: (x not in group, x))


numbers = [8, 3, 1, 2, 5, 4, 7, 6]
group = {5, 7, 2, 3}
print(sorted(group) + sorted(numbers))
# sort_priority(numbers, group)
# print(numbers)

numbers = [150, 200, 300, 1000, 50, 20000]
sort_priority(numbers, [300, 100, 200])
print(numbers)

numbers = [9, 8, 7, 6, 5, 4, 3, 2, 1]
sort_priority(numbers, (300, 100, 200))
print(numbers)